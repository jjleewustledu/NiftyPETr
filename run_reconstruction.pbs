#! /bin/bash

# resources #################################

#PBS -N run_reconstruction
#PBS -l nodes=1:ppn=1:gpus=1,walltime=12:00:00
#PBS -t 1-48



# commands for nodes ########################
# manually, from login node:
# singularity pull docker://jjleewustledu/niftypetr-image:reconstruction_cuda10_1
#DT=$(date +"%Y%m%d%H%M%S")
#nvidia-smi > nvidia-smi-$DT.log

AC=AC
PRJ=$1 # e.g., $PRJ == CCIR_00559
SES=$2 #       $SES == ses-E00026
TRA=$3 #       $TRA == HO_DT20190108111833.000000-Converted-NAC
set -e
nvidia-smi
export CUDA_VISIBLE_DEVICES=0
unset CONDA_DEFAULT_ENV
module load cuda-10.1
module load singularity-3.0.2
if [[ ! -f $SINGULARITY_HOME/list_data_reconstruction_$AC.log ]]; then
    $SINGULARITY_HOME/list_data_reconstruction.sh $AC > $SINGULARITY_HOME/list_data_reconstruction_$AC.log
fi
if [[ $# -eq 3 ]]; then
    singularity exec \
		--nv \
		--bind $SINGULARITY_HOME/hardwareumaps:/hardwareumaps \
		--bind $SINGULARITY_HOME:/SubjectsDir \
		$SINGULARITY_HOME/niftypetr-image_reconstruction_cuda10_1.sif \
		"python" "/work/NiftyPETy/respet/recon/reconstruction.py" "-p" "/SubjectsDir/$PRJ/$SES/$TRA"
else
    input=`head -n $PBS_ARRAYID $SINGULARITY_HOME/list_data_reconstruction_$AC.log | tail -1`
    singularity exec \
		--nv \
		--bind $SINGULARITY_HOME/hardwareumaps:/hardwareumaps \
		--bind $SINGULARITY_HOME:/SubjectsDir \
		$SINGULARITY_HOME/niftypetr-image_reconstruction_cuda10_1.sif \
		"python" "/work/NiftyPETy/respet/recon/reconstruction.py" "-p" "/SubjectsDir/$input"
fi
